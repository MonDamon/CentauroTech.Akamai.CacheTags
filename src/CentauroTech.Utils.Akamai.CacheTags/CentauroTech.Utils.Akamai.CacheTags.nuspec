<?xml version="1.0"?>
<package >
    <metadata>
        <id>CentauroTech.Log4net.ElasticSearch.Async</id>
        <version>1.0.0</version>
        <authors>Cleyton Souza</authors>
        <owners>Cleyton Souza</owners>
        <iconUrl>http://nest.azurewebsites.net/images/nuget-icon.png</iconUrl>
        <licenseUrl>https://github.com/mondamon/CentauroTech.Log4net.ElasticSearch.Async/blob/master/LICENSE</licenseUrl>
        <projectUrl>https://github.com/mondamon/CentauroTech.Log4net.ElasticSearch.Async</projectUrl>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <description>CentauroTech.Log4net.ElasticSearch.Async is a log4net appender, based on log4net.ElasticSearch package, for easy logging of exceptions and messages to Elasticsearch indices. The main improvement over log4net.ElasticSearch is background/async logging based on producer-consumer pattern, automatically utilizing bulk API in case of log event bursts. Currently the package provides:        
          - Background/Async logging based on producer-consumer pattern (non-blocking for main application thread)
          - Configurable exponential backoff retry policy for communication with ElasticSearch
          - Configurable buffer sizes with rolling buffer option (both general producer-consumer buffer and intermediate flush buffer)
          - External machine IP added to log events (if possible)
          - Skipping TLS certificate validation for ElasticSearch endpoint
          - Setting custom HTTP(S) proxy
          - Disabling system HTTP(S) proxy
          - Using custom ElasticSearch processing pipeline
          - Gzip HTTP compression
          - NET Standard 2.0 support
        </description>
        <releaseNotes>
- Background/Async logging based on producer-consumer pattern (non-blocking for main application thread)
- Configurable exponential backoff retry policy for communication with ElasticSearch
- Configurable buffer sizes with rolling buffer option (both general producer-consumer buffer and intermediate flush buffer)
- External machine IP added to log events (if possible)
- Skipping TLS certificate validation for ElasticSearch endpoint
- Setting custom HTTP(S) proxy
- Disabling system HTTP(S) proxy
- Using custom ElasticSearch processing pipeline
- Gzip HTTP compression
- NET Standard 2.0 support
        </releaseNotes>
        <copyright>Copyright 2019</copyright>
        <tags>log logging exception elasticsearch log4net appender async nonblocking non-blocking elastic search</tags>
        <dependencies>
            <group targetFramework="net47">
                <dependency id="log4net" version="2.0.8.0" />
                <dependency id="Polly" version="7.0.2.0" />
            </group>
         
        </dependencies>
    </metadata>
    <files>
        <file src="bin\lib\net47\CentauroTech.Log4net.ElasticSearch.Async*.dll" target="lib"/>
        <file src="bin\lib\net47\CentauroTech.Log4net.ElasticSearch.Async*.pdb" target="lib"/>
        <file src="bin\lib\net47\CentauroTech.Log4net.ElasticSearch.Async*.XML" target="lib"/>
        <file src="readme.txt" target="" />
    </files>
</package>